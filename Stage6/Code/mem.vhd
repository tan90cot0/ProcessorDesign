-- TESTCASE AUTOGENERATED by gentest
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.MyTypes.all;

entity mem is
PORT(
	wd : IN word;
	prog_add : IN STD_LOGIC_VECTOR(5 DOWNTO 0);
	data_add: in std_logic_vector(5 downto 0);
	MW: IN nibble;
	clock : in std_logic;
	rd : OUT word;
	IorD: in std_logic
	);
end entity;

architecture bev of mem is
    SIGNAL address_m: INTEGER RANGE 0 TO 63;
    signal address_i : INTEGER RANGE 0 TO 63;
    signal memm :  memory_type := (
0 => X"E3A01000",
1 => X"E3A07000",
2 => X"E59F702C",
3 => X"E3A03004",
4 => X"E2412003",
5 => X"E5A72004",
6 => X"E5974000",
7 => X"E2877002",
8 => X"E08720B3",
9 => X"E2477004",
10 => X"E5975000",
11 => X"E1D760B0",
12 => X"E1D780F0",
13 => X"E5D79000",
14 => X"E1D7A0D0",
15 => X"00000000",
16 => X"00000000",
17 => X"00000000",
18 => X"00000000",
19 => X"00000000",
20 => X"00000000",
21 => X"00000000",
22 => X"00000000",
23 => X"00000000",
24 => X"00000000",
25 => X"00000000",
26 => X"00000000",
27 => X"00000000",
28 => X"00000000",
29 => X"00000000",
30 => X"00000000",
31 => X"00000000",
32 => X"00000000",
33 => X"00000000",
34 => X"00000000",
35 => X"00000000",
36 => X"00000000",
37 => X"00000000",
38 => X"00000000",
39 => X"00000000",
40 => X"00000000",
41 => X"00000000",
42 => X"00000000",
43 => X"00000000",
44 => X"00000000",
45 => X"00000000",
46 => X"00000000",
47 => X"00000000",
48 => X"00000000",
49 => X"00000000",
50 => X"00000000",
51 => X"00000000",
52 => X"00000000",
53 => X"00000000",
54 => X"00000000",
55 => X"00000000",
56 => X"00000000",
57 => X"00000000",
58 => X"00000000",
59 => X"00000000",
60 => X"00000000",
61 => X"00000000",
62 => X"00000000",
63 => X"00000000",
64 => X"00000000",
65 => X"00000000",
others => X"00000000" );
begin
    address_i<=to_integer(unsigned(prog_add));
    address_m<=to_integer(unsigned(data_add));
    rd<=memm(address_m+64) when IorD = '1' else memm(address_i);
    process(clock)
    begin
            if (rising_edge(clock)) then
            	IF(MW(0)='1')THEN
            		memm(address_m+64)(7 DOWNTO 0)<=wd(7 DOWNTO 0);
            	end if;
            	IF(MW(1)='1')THEN
           		memm(address_m+64)(15 DOWNTO 8)<=wd(15 DOWNTO 8);
            	end if;
            	IF(MW(2)='1')THEN
           		memm(address_m+64)(23 DOWNTO 16)<=wd(23 DOWNTO 16);
            	end if;
            	IF(MW(3)='1')THEN
           		memm(address_m+64)(31 DOWNTO 24)<=wd(31 DOWNTO 24);
            	end if;
         end if;
	  END PROCESS;
END BEV;
